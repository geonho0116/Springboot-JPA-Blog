server:
  port: 8000
  servlet:
#    context-path: /blog
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
      
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3307/blog?serverTimezone=Asia/Seoul
    username: geonho
    password: planty
    
  jpa:
    open-in-view: true #default가 true
    #OSIV를 설정해서 lazy loading. 영속 프록시 객체를 프레젠테이션계층까지 가져간다. -> 호출하면 프록시객체가 실제객체로 변경되고 select만 가능하다.
    #false로 하면 영속성 컨텍스트가 서비스단이 끝나면 종료된다. -> lazy loading을 못함.
    hibernate:
      ddl-auto: update #create, update, none등이 가능하다. create로 해놓으면 매번 계속 생성하므로 이후에는 update 등으로 바꿔야 한다.
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl #엔티티를 만들 때 변수명 그대로 필드를 만들어준다.
        #다른 전략으로 SpringPhysicalNamingStrategy 전략이 있는데 이것을 사용하면 필드가 camelcase로 작성된다.
      use-new-id-generator-mappings: false #JPA의 넘버링 전략을 따라가지 않는다. => DB의 넘버링 전략을 따라감.
    show-sql: true #콘솔창에 sql문을 출력한다. 
    properties:
      hibernate.format_sql: true #콘솔창에 한 줄이 아니라 들여쓰기해서 예쁘게 출력한다. 

  jackson:
    serialization:
      fail-on-empty-beans: false